<?php

namespace Marando\IERS;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-14 at 01:45:44.
 */
class IERSTest extends \PHPUnit_Framework_TestCase {

  /**
   * @covers Marando\IERS\IERS::jd
   */
  public function testJd() {
    $iers = IERS::jd(2451545.5);
    $this->assertEquals(51545, $iers->mjd);
  }

  /**
   * @covers Marando\IERS\IERS::mjd
   */
  public function testMjd() {
    $iers = IERS::mjd(51545);
    $this->assertEquals(2451545.5, $iers->jd);
  }

  /**
   * @covers Marando\IERS\IERS::dut1
   */
  public function testDut1() {
    $tests = [
        [43880, 0.5776000],
        [50116, 0.4964100],
        [57746, null],
        [57646, 0.2065257],
        [48411, 0.2730300],
    ];

    foreach ($tests as $t) {
      $mjd  = $t[0];
      $dut1 = $t[1];

      $iers = IERS::mjd($mjd);
      $this->assertEquals($dut1, $iers->dut1());
    }
  }

  /**
   * @covers Marando\IERS\IERS::x
   */
  public function testX() {
    $tests = [
        [43880, +0.143000],
        [50116, -0.222200],
        [57746, null],
        [57646, +0.211645],
        [48411, -0.124100],
    ];

    foreach ($tests as $t) {
      $mjd  = $t[0];
      $dut1 = $t[1];

      $iers = IERS::mjd($mjd);
      $this->assertEquals($dut1, $iers->x());
    }
  }

  /**
   * @covers Marando\IERS\IERS::y
   */
  public function testY() {
    $tests = [
        [43880, +0.069000],
        [50116, +0.298700],
        [57746, null],
        [57646, +0.015793],
        [48411, +0.508500],
    ];

    foreach ($tests as $t) {
      $mjd  = $t[0];
      $dut1 = $t[1];

      $iers = IERS::mjd($mjd);
      $this->assertEquals($dut1, $iers->y());
    }
  }

  /**
   * @covers Marando\IERS\IERS::deltaT
   */
  public function testDeltaT() {
    $tests = [
        [2456566.5, 67.1717],
        [2449384.5, 60.0564],
        [2441714.5, 43.4724],
        [2041714.5, false],
        [2416846.5, 3.92],
        [2457754.5, 68.6]
    ];

    foreach ($tests as $t) {
      $mjd = $t[0];
      $Î”T  = $t[1];

      $iers = IERS::jd($mjd);
      $this->assertEquals($Î”T, $iers->deltaT(), $mjd);
    }
  }

}
